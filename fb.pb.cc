// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fb.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "fb.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace assignment2 {
class ClientRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientRequest>
     _instance;
} _ClientRequest_default_instance_;
class ShowListDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ShowList>
     _instance;
} _ShowList_default_instance_;
class ServerReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerReply>
     _instance;
} _ServerReply_default_instance_;
class PostDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Post>
     _instance;
} _Post_default_instance_;
class DataSyncDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DataSync>
     _instance;
} _DataSync_default_instance_;

namespace protobuf_fb_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientRequest, requestinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShowList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShowList, all_clients_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShowList, joined_clients_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerReply, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerReply, portnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerReply, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerReply, leader_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Post, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Post, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Post, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Post, timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataSync, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataSync, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataSync, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataSync, targetname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataSync, servername_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(ClientRequest)},
  { 7, -1, sizeof(ShowList)},
  { 14, -1, sizeof(ServerReply)},
  { 23, -1, sizeof(Post)},
  { 31, -1, sizeof(DataSync)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShowList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Post_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DataSync_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "fb.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaults();
  _ClientRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientRequest_default_instance_);_ShowList_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ShowList_default_instance_);_ServerReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerReply_default_instance_);_Post_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Post_default_instance_);_DataSync_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DataSync_default_instance_);_Post_default_instance_._instance.get_mutable()->timestamp_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\010fb.proto\022\013assignment2\032\037google/protobuf"
      "/timestamp.proto\"6\n\rClientRequest\022\020\n\010use"
      "rname\030\001 \001(\t\022\023\n\013requestinfo\030\002 \003(\t\"7\n\010Show"
      "List\022\023\n\013all_clients\030\001 \003(\t\022\026\n\016joined_clie"
      "nts\030\002 \003(\t\"K\n\013ServerReply\022\017\n\007message\030\001 \001("
      "\t\022\017\n\007portnum\030\002 \001(\t\022\n\n\002id\030\003 \001(\005\022\016\n\006leader"
      "\030\004 \001(\005\"X\n\004Post\022\020\n\010username\030\001 \001(\t\022\017\n\007cont"
      "ent\030\002 \001(\t\022-\n\ttimestamp\030\003 \001(\0132\032.google.pr"
      "otobuf.Timestamp\"U\n\010DataSync\022\017\n\007message\030"
      "\001 \001(\t\022\020\n\010username\030\002 \001(\t\022\022\n\ntargetname\030\003 "
      "\001(\t\022\022\n\nservername\030\004 \001(\t2\206\004\n\014FBChatServer"
      "\022\?\n\005Login\022\032.assignment2.ClientRequest\032\030."
      "assignment2.ServerReply\"\000\022A\n\007Connect\022\032.a"
      "ssignment2.ClientRequest\032\030.assignment2.S"
      "erverReply\"\000\022;\n\004List\022\032.assignment2.Clien"
      "tRequest\032\025.assignment2.ShowList\"\000\022>\n\004Joi"
      "n\022\032.assignment2.ClientRequest\032\030.assignme"
      "nt2.ServerReply\"\000\022\?\n\005Leave\022\032.assignment2"
      ".ClientRequest\032\030.assignment2.ServerReply"
      "\"\000\0222\n\004Chat\022\021.assignment2.Post\032\021.assignme"
      "nt2.Post\"\000(\0010\001\022\?\n\005Alive\022\032.assignment2.Cl"
      "ientRequest\032\030.assignment2.ServerReply\"\000\022"
      "\?\n\005Check\022\032.assignment2.ClientRequest\032\030.a"
      "ssignment2.ServerReply\"\0002\232\004\n\016RegisterSer"
      "ver\022F\n\016ServerRegister\022\030.assignment2.Serv"
      "erReply\032\030.assignment2.ServerReply\"\000\022E\n\rP"
      "rocHeartBeat\022\030.assignment2.ServerReply\032\030"
      ".assignment2.ServerReply\"\000\022@\n\010Election\022\030"
      ".assignment2.ServerReply\032\030.assignment2.S"
      "erverReply\"\000\0229\n\004Join\022\025.assignment2.DataS"
      "ync\032\030.assignment2.ServerReply\"\000\022:\n\005Login"
      "\022\025.assignment2.DataSync\032\030.assignment2.Se"
      "rverReply\"\000\022:\n\005Leave\022\025.assignment2.DataS"
      "ync\032\030.assignment2.ServerReply\"\000\022C\n\016updat"
      "eTimeLine\022\025.assignment2.DataSync\032\030.assig"
      "nment2.ServerReply\"\000\022\?\n\nmsgForward\022\025.ass"
      "ignment2.DataSync\032\030.assignment2.ServerRe"
      "ply\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1493);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "fb.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_fb_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientRequest::kUsernameFieldNumber;
const int ClientRequest::kRequestinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientRequest::ClientRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fb_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:assignment2.ClientRequest)
}
ClientRequest::ClientRequest(const ClientRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      requestinfo_(from.requestinfo_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  // @@protoc_insertion_point(copy_constructor:assignment2.ClientRequest)
}

void ClientRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ClientRequest::~ClientRequest() {
  // @@protoc_insertion_point(destructor:assignment2.ClientRequest)
  SharedDtor();
}

void ClientRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientRequest::descriptor() {
  protobuf_fb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientRequest& ClientRequest::default_instance() {
  protobuf_fb_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientRequest* ClientRequest::New(::google::protobuf::Arena* arena) const {
  ClientRequest* n = new ClientRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:assignment2.ClientRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requestinfo_.Clear();
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ClientRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:assignment2.ClientRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "assignment2.ClientRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string requestinfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_requestinfo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->requestinfo(this->requestinfo_size() - 1).data(),
            static_cast<int>(this->requestinfo(this->requestinfo_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "assignment2.ClientRequest.requestinfo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:assignment2.ClientRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:assignment2.ClientRequest)
  return false;
#undef DO_
}

void ClientRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:assignment2.ClientRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "assignment2.ClientRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // repeated string requestinfo = 2;
  for (int i = 0, n = this->requestinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->requestinfo(i).data(), static_cast<int>(this->requestinfo(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "assignment2.ClientRequest.requestinfo");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->requestinfo(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:assignment2.ClientRequest)
}

::google::protobuf::uint8* ClientRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:assignment2.ClientRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "assignment2.ClientRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // repeated string requestinfo = 2;
  for (int i = 0, n = this->requestinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->requestinfo(i).data(), static_cast<int>(this->requestinfo(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "assignment2.ClientRequest.requestinfo");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->requestinfo(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:assignment2.ClientRequest)
  return target;
}

size_t ClientRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:assignment2.ClientRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string requestinfo = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->requestinfo_size());
  for (int i = 0, n = this->requestinfo_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->requestinfo(i));
  }

  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:assignment2.ClientRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:assignment2.ClientRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:assignment2.ClientRequest)
    MergeFrom(*source);
  }
}

void ClientRequest::MergeFrom(const ClientRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:assignment2.ClientRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  requestinfo_.MergeFrom(from.requestinfo_);
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
}

void ClientRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:assignment2.ClientRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientRequest::CopyFrom(const ClientRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:assignment2.ClientRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientRequest::IsInitialized() const {
  return true;
}

void ClientRequest::Swap(ClientRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientRequest::InternalSwap(ClientRequest* other) {
  using std::swap;
  requestinfo_.InternalSwap(&other->requestinfo_);
  username_.Swap(&other->username_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientRequest::GetMetadata() const {
  protobuf_fb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fb_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientRequest

// string username = 1;
void ClientRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientRequest::username() const {
  // @@protoc_insertion_point(field_get:assignment2.ClientRequest.username)
  return username_.GetNoArena();
}
void ClientRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:assignment2.ClientRequest.username)
}
#if LANG_CXX11
void ClientRequest::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:assignment2.ClientRequest.username)
}
#endif
void ClientRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:assignment2.ClientRequest.username)
}
void ClientRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:assignment2.ClientRequest.username)
}
::std::string* ClientRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:assignment2.ClientRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientRequest::release_username() {
  // @@protoc_insertion_point(field_release:assignment2.ClientRequest.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:assignment2.ClientRequest.username)
}

// repeated string requestinfo = 2;
int ClientRequest::requestinfo_size() const {
  return requestinfo_.size();
}
void ClientRequest::clear_requestinfo() {
  requestinfo_.Clear();
}
const ::std::string& ClientRequest::requestinfo(int index) const {
  // @@protoc_insertion_point(field_get:assignment2.ClientRequest.requestinfo)
  return requestinfo_.Get(index);
}
::std::string* ClientRequest::mutable_requestinfo(int index) {
  // @@protoc_insertion_point(field_mutable:assignment2.ClientRequest.requestinfo)
  return requestinfo_.Mutable(index);
}
void ClientRequest::set_requestinfo(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:assignment2.ClientRequest.requestinfo)
  requestinfo_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void ClientRequest::set_requestinfo(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:assignment2.ClientRequest.requestinfo)
  requestinfo_.Mutable(index)->assign(std::move(value));
}
#endif
void ClientRequest::set_requestinfo(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  requestinfo_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:assignment2.ClientRequest.requestinfo)
}
void ClientRequest::set_requestinfo(int index, const char* value, size_t size) {
  requestinfo_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:assignment2.ClientRequest.requestinfo)
}
::std::string* ClientRequest::add_requestinfo() {
  // @@protoc_insertion_point(field_add_mutable:assignment2.ClientRequest.requestinfo)
  return requestinfo_.Add();
}
void ClientRequest::add_requestinfo(const ::std::string& value) {
  requestinfo_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:assignment2.ClientRequest.requestinfo)
}
#if LANG_CXX11
void ClientRequest::add_requestinfo(::std::string&& value) {
  requestinfo_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:assignment2.ClientRequest.requestinfo)
}
#endif
void ClientRequest::add_requestinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  requestinfo_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:assignment2.ClientRequest.requestinfo)
}
void ClientRequest::add_requestinfo(const char* value, size_t size) {
  requestinfo_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:assignment2.ClientRequest.requestinfo)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ClientRequest::requestinfo() const {
  // @@protoc_insertion_point(field_list:assignment2.ClientRequest.requestinfo)
  return requestinfo_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ClientRequest::mutable_requestinfo() {
  // @@protoc_insertion_point(field_mutable_list:assignment2.ClientRequest.requestinfo)
  return &requestinfo_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowList::kAllClientsFieldNumber;
const int ShowList::kJoinedClientsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowList::ShowList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fb_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:assignment2.ShowList)
}
ShowList::ShowList(const ShowList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      all_clients_(from.all_clients_),
      joined_clients_(from.joined_clients_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:assignment2.ShowList)
}

void ShowList::SharedCtor() {
  _cached_size_ = 0;
}

ShowList::~ShowList() {
  // @@protoc_insertion_point(destructor:assignment2.ShowList)
  SharedDtor();
}

void ShowList::SharedDtor() {
}

void ShowList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShowList::descriptor() {
  protobuf_fb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShowList& ShowList::default_instance() {
  protobuf_fb_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShowList* ShowList::New(::google::protobuf::Arena* arena) const {
  ShowList* n = new ShowList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShowList::Clear() {
// @@protoc_insertion_point(message_clear_start:assignment2.ShowList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  all_clients_.Clear();
  joined_clients_.Clear();
  _internal_metadata_.Clear();
}

bool ShowList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:assignment2.ShowList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string all_clients = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_all_clients()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->all_clients(this->all_clients_size() - 1).data(),
            static_cast<int>(this->all_clients(this->all_clients_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "assignment2.ShowList.all_clients"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string joined_clients = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_joined_clients()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->joined_clients(this->joined_clients_size() - 1).data(),
            static_cast<int>(this->joined_clients(this->joined_clients_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "assignment2.ShowList.joined_clients"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:assignment2.ShowList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:assignment2.ShowList)
  return false;
#undef DO_
}

void ShowList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:assignment2.ShowList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string all_clients = 1;
  for (int i = 0, n = this->all_clients_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->all_clients(i).data(), static_cast<int>(this->all_clients(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "assignment2.ShowList.all_clients");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->all_clients(i), output);
  }

  // repeated string joined_clients = 2;
  for (int i = 0, n = this->joined_clients_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->joined_clients(i).data(), static_cast<int>(this->joined_clients(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "assignment2.ShowList.joined_clients");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->joined_clients(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:assignment2.ShowList)
}

::google::protobuf::uint8* ShowList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:assignment2.ShowList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string all_clients = 1;
  for (int i = 0, n = this->all_clients_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->all_clients(i).data(), static_cast<int>(this->all_clients(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "assignment2.ShowList.all_clients");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->all_clients(i), target);
  }

  // repeated string joined_clients = 2;
  for (int i = 0, n = this->joined_clients_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->joined_clients(i).data(), static_cast<int>(this->joined_clients(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "assignment2.ShowList.joined_clients");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->joined_clients(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:assignment2.ShowList)
  return target;
}

size_t ShowList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:assignment2.ShowList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string all_clients = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->all_clients_size());
  for (int i = 0, n = this->all_clients_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->all_clients(i));
  }

  // repeated string joined_clients = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->joined_clients_size());
  for (int i = 0, n = this->joined_clients_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->joined_clients(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShowList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:assignment2.ShowList)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShowList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:assignment2.ShowList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:assignment2.ShowList)
    MergeFrom(*source);
  }
}

void ShowList::MergeFrom(const ShowList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:assignment2.ShowList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  all_clients_.MergeFrom(from.all_clients_);
  joined_clients_.MergeFrom(from.joined_clients_);
}

void ShowList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:assignment2.ShowList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowList::CopyFrom(const ShowList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:assignment2.ShowList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowList::IsInitialized() const {
  return true;
}

void ShowList::Swap(ShowList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowList::InternalSwap(ShowList* other) {
  using std::swap;
  all_clients_.InternalSwap(&other->all_clients_);
  joined_clients_.InternalSwap(&other->joined_clients_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShowList::GetMetadata() const {
  protobuf_fb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fb_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShowList

// repeated string all_clients = 1;
int ShowList::all_clients_size() const {
  return all_clients_.size();
}
void ShowList::clear_all_clients() {
  all_clients_.Clear();
}
const ::std::string& ShowList::all_clients(int index) const {
  // @@protoc_insertion_point(field_get:assignment2.ShowList.all_clients)
  return all_clients_.Get(index);
}
::std::string* ShowList::mutable_all_clients(int index) {
  // @@protoc_insertion_point(field_mutable:assignment2.ShowList.all_clients)
  return all_clients_.Mutable(index);
}
void ShowList::set_all_clients(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:assignment2.ShowList.all_clients)
  all_clients_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void ShowList::set_all_clients(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:assignment2.ShowList.all_clients)
  all_clients_.Mutable(index)->assign(std::move(value));
}
#endif
void ShowList::set_all_clients(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  all_clients_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:assignment2.ShowList.all_clients)
}
void ShowList::set_all_clients(int index, const char* value, size_t size) {
  all_clients_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:assignment2.ShowList.all_clients)
}
::std::string* ShowList::add_all_clients() {
  // @@protoc_insertion_point(field_add_mutable:assignment2.ShowList.all_clients)
  return all_clients_.Add();
}
void ShowList::add_all_clients(const ::std::string& value) {
  all_clients_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:assignment2.ShowList.all_clients)
}
#if LANG_CXX11
void ShowList::add_all_clients(::std::string&& value) {
  all_clients_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:assignment2.ShowList.all_clients)
}
#endif
void ShowList::add_all_clients(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  all_clients_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:assignment2.ShowList.all_clients)
}
void ShowList::add_all_clients(const char* value, size_t size) {
  all_clients_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:assignment2.ShowList.all_clients)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ShowList::all_clients() const {
  // @@protoc_insertion_point(field_list:assignment2.ShowList.all_clients)
  return all_clients_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ShowList::mutable_all_clients() {
  // @@protoc_insertion_point(field_mutable_list:assignment2.ShowList.all_clients)
  return &all_clients_;
}

// repeated string joined_clients = 2;
int ShowList::joined_clients_size() const {
  return joined_clients_.size();
}
void ShowList::clear_joined_clients() {
  joined_clients_.Clear();
}
const ::std::string& ShowList::joined_clients(int index) const {
  // @@protoc_insertion_point(field_get:assignment2.ShowList.joined_clients)
  return joined_clients_.Get(index);
}
::std::string* ShowList::mutable_joined_clients(int index) {
  // @@protoc_insertion_point(field_mutable:assignment2.ShowList.joined_clients)
  return joined_clients_.Mutable(index);
}
void ShowList::set_joined_clients(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:assignment2.ShowList.joined_clients)
  joined_clients_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void ShowList::set_joined_clients(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:assignment2.ShowList.joined_clients)
  joined_clients_.Mutable(index)->assign(std::move(value));
}
#endif
void ShowList::set_joined_clients(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  joined_clients_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:assignment2.ShowList.joined_clients)
}
void ShowList::set_joined_clients(int index, const char* value, size_t size) {
  joined_clients_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:assignment2.ShowList.joined_clients)
}
::std::string* ShowList::add_joined_clients() {
  // @@protoc_insertion_point(field_add_mutable:assignment2.ShowList.joined_clients)
  return joined_clients_.Add();
}
void ShowList::add_joined_clients(const ::std::string& value) {
  joined_clients_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:assignment2.ShowList.joined_clients)
}
#if LANG_CXX11
void ShowList::add_joined_clients(::std::string&& value) {
  joined_clients_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:assignment2.ShowList.joined_clients)
}
#endif
void ShowList::add_joined_clients(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  joined_clients_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:assignment2.ShowList.joined_clients)
}
void ShowList::add_joined_clients(const char* value, size_t size) {
  joined_clients_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:assignment2.ShowList.joined_clients)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ShowList::joined_clients() const {
  // @@protoc_insertion_point(field_list:assignment2.ShowList.joined_clients)
  return joined_clients_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ShowList::mutable_joined_clients() {
  // @@protoc_insertion_point(field_mutable_list:assignment2.ShowList.joined_clients)
  return &joined_clients_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerReply::kMessageFieldNumber;
const int ServerReply::kPortnumFieldNumber;
const int ServerReply::kIdFieldNumber;
const int ServerReply::kLeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerReply::ServerReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fb_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:assignment2.ServerReply)
}
ServerReply::ServerReply(const ServerReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  portnum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.portnum().size() > 0) {
    portnum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portnum_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&leader_) -
    reinterpret_cast<char*>(&id_)) + sizeof(leader_));
  // @@protoc_insertion_point(copy_constructor:assignment2.ServerReply)
}

void ServerReply::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portnum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&leader_) -
      reinterpret_cast<char*>(&id_)) + sizeof(leader_));
  _cached_size_ = 0;
}

ServerReply::~ServerReply() {
  // @@protoc_insertion_point(destructor:assignment2.ServerReply)
  SharedDtor();
}

void ServerReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portnum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerReply::descriptor() {
  protobuf_fb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerReply& ServerReply::default_instance() {
  protobuf_fb_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerReply* ServerReply::New(::google::protobuf::Arena* arena) const {
  ServerReply* n = new ServerReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerReply::Clear() {
// @@protoc_insertion_point(message_clear_start:assignment2.ServerReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portnum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&leader_) -
      reinterpret_cast<char*>(&id_)) + sizeof(leader_));
  _internal_metadata_.Clear();
}

bool ServerReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:assignment2.ServerReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "assignment2.ServerReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string portnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_portnum()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->portnum().data(), static_cast<int>(this->portnum().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "assignment2.ServerReply.portnum"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 leader = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leader_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:assignment2.ServerReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:assignment2.ServerReply)
  return false;
#undef DO_
}

void ServerReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:assignment2.ServerReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "assignment2.ServerReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // string portnum = 2;
  if (this->portnum().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portnum().data(), static_cast<int>(this->portnum().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "assignment2.ServerReply.portnum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->portnum(), output);
  }

  // int32 id = 3;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->id(), output);
  }

  // int32 leader = 4;
  if (this->leader() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->leader(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:assignment2.ServerReply)
}

::google::protobuf::uint8* ServerReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:assignment2.ServerReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "assignment2.ServerReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // string portnum = 2;
  if (this->portnum().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portnum().data(), static_cast<int>(this->portnum().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "assignment2.ServerReply.portnum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->portnum(), target);
  }

  // int32 id = 3;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->id(), target);
  }

  // int32 leader = 4;
  if (this->leader() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->leader(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:assignment2.ServerReply)
  return target;
}

size_t ServerReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:assignment2.ServerReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // string portnum = 2;
  if (this->portnum().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->portnum());
  }

  // int32 id = 3;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 leader = 4;
  if (this->leader() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->leader());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:assignment2.ServerReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:assignment2.ServerReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:assignment2.ServerReply)
    MergeFrom(*source);
  }
}

void ServerReply::MergeFrom(const ServerReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:assignment2.ServerReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.portnum().size() > 0) {

    portnum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portnum_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.leader() != 0) {
    set_leader(from.leader());
  }
}

void ServerReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:assignment2.ServerReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerReply::CopyFrom(const ServerReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:assignment2.ServerReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerReply::IsInitialized() const {
  return true;
}

void ServerReply::Swap(ServerReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerReply::InternalSwap(ServerReply* other) {
  using std::swap;
  message_.Swap(&other->message_);
  portnum_.Swap(&other->portnum_);
  swap(id_, other->id_);
  swap(leader_, other->leader_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerReply::GetMetadata() const {
  protobuf_fb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fb_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerReply

// string message = 1;
void ServerReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ServerReply::message() const {
  // @@protoc_insertion_point(field_get:assignment2.ServerReply.message)
  return message_.GetNoArena();
}
void ServerReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:assignment2.ServerReply.message)
}
#if LANG_CXX11
void ServerReply::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:assignment2.ServerReply.message)
}
#endif
void ServerReply::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:assignment2.ServerReply.message)
}
void ServerReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:assignment2.ServerReply.message)
}
::std::string* ServerReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:assignment2.ServerReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServerReply::release_message() {
  // @@protoc_insertion_point(field_release:assignment2.ServerReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:assignment2.ServerReply.message)
}

// string portnum = 2;
void ServerReply::clear_portnum() {
  portnum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ServerReply::portnum() const {
  // @@protoc_insertion_point(field_get:assignment2.ServerReply.portnum)
  return portnum_.GetNoArena();
}
void ServerReply::set_portnum(const ::std::string& value) {
  
  portnum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:assignment2.ServerReply.portnum)
}
#if LANG_CXX11
void ServerReply::set_portnum(::std::string&& value) {
  
  portnum_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:assignment2.ServerReply.portnum)
}
#endif
void ServerReply::set_portnum(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  portnum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:assignment2.ServerReply.portnum)
}
void ServerReply::set_portnum(const char* value, size_t size) {
  
  portnum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:assignment2.ServerReply.portnum)
}
::std::string* ServerReply::mutable_portnum() {
  
  // @@protoc_insertion_point(field_mutable:assignment2.ServerReply.portnum)
  return portnum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServerReply::release_portnum() {
  // @@protoc_insertion_point(field_release:assignment2.ServerReply.portnum)
  
  return portnum_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerReply::set_allocated_portnum(::std::string* portnum) {
  if (portnum != NULL) {
    
  } else {
    
  }
  portnum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), portnum);
  // @@protoc_insertion_point(field_set_allocated:assignment2.ServerReply.portnum)
}

// int32 id = 3;
void ServerReply::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 ServerReply::id() const {
  // @@protoc_insertion_point(field_get:assignment2.ServerReply.id)
  return id_;
}
void ServerReply::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:assignment2.ServerReply.id)
}

// int32 leader = 4;
void ServerReply::clear_leader() {
  leader_ = 0;
}
::google::protobuf::int32 ServerReply::leader() const {
  // @@protoc_insertion_point(field_get:assignment2.ServerReply.leader)
  return leader_;
}
void ServerReply::set_leader(::google::protobuf::int32 value) {
  
  leader_ = value;
  // @@protoc_insertion_point(field_set:assignment2.ServerReply.leader)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Post::kUsernameFieldNumber;
const int Post::kContentFieldNumber;
const int Post::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Post::Post()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fb_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:assignment2.Post)
}
Post::Post(const Post& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.has_timestamp()) {
    timestamp_ = new ::google::protobuf::Timestamp(*from.timestamp_);
  } else {
    timestamp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:assignment2.Post)
}

void Post::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = NULL;
  _cached_size_ = 0;
}

Post::~Post() {
  // @@protoc_insertion_point(destructor:assignment2.Post)
  SharedDtor();
}

void Post::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete timestamp_;
}

void Post::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Post::descriptor() {
  protobuf_fb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Post& Post::default_instance() {
  protobuf_fb_2eproto::InitDefaults();
  return *internal_default_instance();
}

Post* Post::New(::google::protobuf::Arena* arena) const {
  Post* n = new Post;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Post::Clear() {
// @@protoc_insertion_point(message_clear_start:assignment2.Post)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) {
    delete timestamp_;
  }
  timestamp_ = NULL;
  _internal_metadata_.Clear();
}

bool Post::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:assignment2.Post)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "assignment2.Post.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "assignment2.Post.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:assignment2.Post)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:assignment2.Post)
  return false;
#undef DO_
}

void Post::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:assignment2.Post)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "assignment2.Post.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "assignment2.Post.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->content(), output);
  }

  // .google.protobuf.Timestamp timestamp = 3;
  if (this->has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->timestamp_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:assignment2.Post)
}

::google::protobuf::uint8* Post::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:assignment2.Post)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "assignment2.Post.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "assignment2.Post.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->content(), target);
  }

  // .google.protobuf.Timestamp timestamp = 3;
  if (this->has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->timestamp_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:assignment2.Post)
  return target;
}

size_t Post::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:assignment2.Post)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string content = 2;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // .google.protobuf.Timestamp timestamp = 3;
  if (this->has_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->timestamp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Post::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:assignment2.Post)
  GOOGLE_DCHECK_NE(&from, this);
  const Post* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Post>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:assignment2.Post)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:assignment2.Post)
    MergeFrom(*source);
  }
}

void Post::MergeFrom(const Post& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:assignment2.Post)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.has_timestamp()) {
    mutable_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.timestamp());
  }
}

void Post::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:assignment2.Post)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Post::CopyFrom(const Post& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:assignment2.Post)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Post::IsInitialized() const {
  return true;
}

void Post::Swap(Post* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Post::InternalSwap(Post* other) {
  using std::swap;
  username_.Swap(&other->username_);
  content_.Swap(&other->content_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Post::GetMetadata() const {
  protobuf_fb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fb_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Post

// string username = 1;
void Post::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Post::username() const {
  // @@protoc_insertion_point(field_get:assignment2.Post.username)
  return username_.GetNoArena();
}
void Post::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:assignment2.Post.username)
}
#if LANG_CXX11
void Post::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:assignment2.Post.username)
}
#endif
void Post::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:assignment2.Post.username)
}
void Post::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:assignment2.Post.username)
}
::std::string* Post::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:assignment2.Post.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Post::release_username() {
  // @@protoc_insertion_point(field_release:assignment2.Post.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Post::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:assignment2.Post.username)
}

// string content = 2;
void Post::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Post::content() const {
  // @@protoc_insertion_point(field_get:assignment2.Post.content)
  return content_.GetNoArena();
}
void Post::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:assignment2.Post.content)
}
#if LANG_CXX11
void Post::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:assignment2.Post.content)
}
#endif
void Post::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:assignment2.Post.content)
}
void Post::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:assignment2.Post.content)
}
::std::string* Post::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:assignment2.Post.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Post::release_content() {
  // @@protoc_insertion_point(field_release:assignment2.Post.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Post::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:assignment2.Post.content)
}

// .google.protobuf.Timestamp timestamp = 3;
bool Post::has_timestamp() const {
  return this != internal_default_instance() && timestamp_ != NULL;
}
void Post::clear_timestamp() {
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) delete timestamp_;
  timestamp_ = NULL;
}
const ::google::protobuf::Timestamp& Post::timestamp() const {
  const ::google::protobuf::Timestamp* p = timestamp_;
  // @@protoc_insertion_point(field_get:assignment2.Post.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
::google::protobuf::Timestamp* Post::mutable_timestamp() {
  
  if (timestamp_ == NULL) {
    timestamp_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:assignment2.Post.timestamp)
  return timestamp_;
}
::google::protobuf::Timestamp* Post::release_timestamp() {
  // @@protoc_insertion_point(field_release:assignment2.Post.timestamp)
  
  ::google::protobuf::Timestamp* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
void Post::set_allocated_timestamp(::google::protobuf::Timestamp* timestamp) {
  delete timestamp_;
  if (timestamp != NULL && timestamp->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_timestamp = new ::google::protobuf::Timestamp;
    new_timestamp->CopyFrom(*timestamp);
    timestamp = new_timestamp;
  }
  timestamp_ = timestamp;
  if (timestamp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:assignment2.Post.timestamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataSync::kMessageFieldNumber;
const int DataSync::kUsernameFieldNumber;
const int DataSync::kTargetnameFieldNumber;
const int DataSync::kServernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataSync::DataSync()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fb_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:assignment2.DataSync)
}
DataSync::DataSync(const DataSync& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  targetname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.targetname().size() > 0) {
    targetname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.targetname_);
  }
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.servername().size() > 0) {
    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
  // @@protoc_insertion_point(copy_constructor:assignment2.DataSync)
}

void DataSync::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  targetname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DataSync::~DataSync() {
  // @@protoc_insertion_point(destructor:assignment2.DataSync)
  SharedDtor();
}

void DataSync::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  targetname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DataSync::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataSync::descriptor() {
  protobuf_fb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataSync& DataSync::default_instance() {
  protobuf_fb_2eproto::InitDefaults();
  return *internal_default_instance();
}

DataSync* DataSync::New(::google::protobuf::Arena* arena) const {
  DataSync* n = new DataSync;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataSync::Clear() {
// @@protoc_insertion_point(message_clear_start:assignment2.DataSync)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  targetname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DataSync::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:assignment2.DataSync)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "assignment2.DataSync.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "assignment2.DataSync.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string targetname = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_targetname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->targetname().data(), static_cast<int>(this->targetname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "assignment2.DataSync.targetname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string servername = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servername().data(), static_cast<int>(this->servername().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "assignment2.DataSync.servername"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:assignment2.DataSync)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:assignment2.DataSync)
  return false;
#undef DO_
}

void DataSync::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:assignment2.DataSync)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "assignment2.DataSync.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "assignment2.DataSync.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // string targetname = 3;
  if (this->targetname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->targetname().data(), static_cast<int>(this->targetname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "assignment2.DataSync.targetname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->targetname(), output);
  }

  // string servername = 4;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), static_cast<int>(this->servername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "assignment2.DataSync.servername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->servername(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:assignment2.DataSync)
}

::google::protobuf::uint8* DataSync::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:assignment2.DataSync)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "assignment2.DataSync.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "assignment2.DataSync.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // string targetname = 3;
  if (this->targetname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->targetname().data(), static_cast<int>(this->targetname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "assignment2.DataSync.targetname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->targetname(), target);
  }

  // string servername = 4;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), static_cast<int>(this->servername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "assignment2.DataSync.servername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->servername(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:assignment2.DataSync)
  return target;
}

size_t DataSync::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:assignment2.DataSync)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // string username = 2;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string targetname = 3;
  if (this->targetname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->targetname());
  }

  // string servername = 4;
  if (this->servername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servername());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataSync::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:assignment2.DataSync)
  GOOGLE_DCHECK_NE(&from, this);
  const DataSync* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataSync>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:assignment2.DataSync)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:assignment2.DataSync)
    MergeFrom(*source);
  }
}

void DataSync::MergeFrom(const DataSync& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:assignment2.DataSync)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.targetname().size() > 0) {

    targetname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.targetname_);
  }
  if (from.servername().size() > 0) {

    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
}

void DataSync::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:assignment2.DataSync)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataSync::CopyFrom(const DataSync& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:assignment2.DataSync)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataSync::IsInitialized() const {
  return true;
}

void DataSync::Swap(DataSync* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataSync::InternalSwap(DataSync* other) {
  using std::swap;
  message_.Swap(&other->message_);
  username_.Swap(&other->username_);
  targetname_.Swap(&other->targetname_);
  servername_.Swap(&other->servername_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DataSync::GetMetadata() const {
  protobuf_fb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fb_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DataSync

// string message = 1;
void DataSync::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DataSync::message() const {
  // @@protoc_insertion_point(field_get:assignment2.DataSync.message)
  return message_.GetNoArena();
}
void DataSync::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:assignment2.DataSync.message)
}
#if LANG_CXX11
void DataSync::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:assignment2.DataSync.message)
}
#endif
void DataSync::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:assignment2.DataSync.message)
}
void DataSync::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:assignment2.DataSync.message)
}
::std::string* DataSync::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:assignment2.DataSync.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DataSync::release_message() {
  // @@protoc_insertion_point(field_release:assignment2.DataSync.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DataSync::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:assignment2.DataSync.message)
}

// string username = 2;
void DataSync::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DataSync::username() const {
  // @@protoc_insertion_point(field_get:assignment2.DataSync.username)
  return username_.GetNoArena();
}
void DataSync::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:assignment2.DataSync.username)
}
#if LANG_CXX11
void DataSync::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:assignment2.DataSync.username)
}
#endif
void DataSync::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:assignment2.DataSync.username)
}
void DataSync::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:assignment2.DataSync.username)
}
::std::string* DataSync::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:assignment2.DataSync.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DataSync::release_username() {
  // @@protoc_insertion_point(field_release:assignment2.DataSync.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DataSync::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:assignment2.DataSync.username)
}

// string targetname = 3;
void DataSync::clear_targetname() {
  targetname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DataSync::targetname() const {
  // @@protoc_insertion_point(field_get:assignment2.DataSync.targetname)
  return targetname_.GetNoArena();
}
void DataSync::set_targetname(const ::std::string& value) {
  
  targetname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:assignment2.DataSync.targetname)
}
#if LANG_CXX11
void DataSync::set_targetname(::std::string&& value) {
  
  targetname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:assignment2.DataSync.targetname)
}
#endif
void DataSync::set_targetname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  targetname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:assignment2.DataSync.targetname)
}
void DataSync::set_targetname(const char* value, size_t size) {
  
  targetname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:assignment2.DataSync.targetname)
}
::std::string* DataSync::mutable_targetname() {
  
  // @@protoc_insertion_point(field_mutable:assignment2.DataSync.targetname)
  return targetname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DataSync::release_targetname() {
  // @@protoc_insertion_point(field_release:assignment2.DataSync.targetname)
  
  return targetname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DataSync::set_allocated_targetname(::std::string* targetname) {
  if (targetname != NULL) {
    
  } else {
    
  }
  targetname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), targetname);
  // @@protoc_insertion_point(field_set_allocated:assignment2.DataSync.targetname)
}

// string servername = 4;
void DataSync::clear_servername() {
  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DataSync::servername() const {
  // @@protoc_insertion_point(field_get:assignment2.DataSync.servername)
  return servername_.GetNoArena();
}
void DataSync::set_servername(const ::std::string& value) {
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:assignment2.DataSync.servername)
}
#if LANG_CXX11
void DataSync::set_servername(::std::string&& value) {
  
  servername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:assignment2.DataSync.servername)
}
#endif
void DataSync::set_servername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:assignment2.DataSync.servername)
}
void DataSync::set_servername(const char* value, size_t size) {
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:assignment2.DataSync.servername)
}
::std::string* DataSync::mutable_servername() {
  
  // @@protoc_insertion_point(field_mutable:assignment2.DataSync.servername)
  return servername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DataSync::release_servername() {
  // @@protoc_insertion_point(field_release:assignment2.DataSync.servername)
  
  return servername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DataSync::set_allocated_servername(::std::string* servername) {
  if (servername != NULL) {
    
  } else {
    
  }
  servername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), servername);
  // @@protoc_insertion_point(field_set_allocated:assignment2.DataSync.servername)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace assignment2

// @@protoc_insertion_point(global_scope)
